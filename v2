-- Fly to Last World and Open Rainbow Egg

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Configuration Variables
local egg_name = "rainbow-egg"  -- Target egg to find
local open_eggs = true -- Set to true to hatch eggs, false to just find them

-- Function to find the last world or island (for the Rainbow Egg)
function findLastWorld()
    local lastWorld = nil
    -- Loop through all parts in the workspace to find the last island or world (example)
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and string.find(obj.Name, "Island") then
            -- In a real case, you would check for the "last" world based on some conditions
            lastWorld = obj
        end
    end
    return lastWorld
end

-- Function to fly to the egg and start opening it
function flyToEgg(egg)
    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if root and egg then
        local eggPosition = egg.CFrame.Position
        local direction = (eggPosition - root.Position).unit
        -- Fly to the egg (simple approach)
        while (root.Position - eggPosition).Magnitude > 5 do
            root.CFrame = root.CFrame + direction * 10
            wait(0.1)  -- Minimal delay to simulate flying
        end
        -- Once at the egg, open it
        openEgg(egg)
    else
        print("No egg or root part found, cannot fly.")
    end
end

-- Function to hatch the egg (if open_eggs is true)
function openEgg(egg)
    if open_eggs then
        print("Opening egg:", egg.Name)
        
        -- Simulate pressing "E" to open the egg (if "E" is the correct input key)
        local userInputService = game:GetService("UserInputService")
        userInputService.InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.E then
                -- You can also call any other function here that opens the egg based on Delta
                -- If Delta has a custom way to "open" eggs, you would invoke it here.
                print("Egg opened!")
            end
        end)
    else
        print("Egg found but not opening:", egg.Name)
    end
end

-- Main loop (find last world, fly to it, open rainbow egg)
spawn(function()
    while true do
        -- Find the last world (island)
        local lastWorld = findLastWorld()
        
        if lastWorld then
            -- Search for the Rainbow Egg on that world
            local rainbowEgg = lastWorld:FindFirstChild(egg_name)
            
            if rainbowEgg then
                -- Fly to the Rainbow Egg and open it
                flyToEgg(rainbowEgg)
            else
                print("Rainbow egg not found in the last world!")
            end
        else
            print("No last world found!")
        end
        
        -- Delay of 5 seconds before checking again
        wait(5)
    end
end)
