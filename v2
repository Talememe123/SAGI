local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local PlaceId = game.PlaceId

-- Configuration Variables
local target_eggs = {"Void Egg", "Nightmare Egg", "Rainbow Egg", "Aura Egg", "Silly Egg"}  -- List of eggs to search for
local max_distance = 16000 -- Maximum distance to search for eggs (increased to 16000 meters)

local eggHunt = false

-- Function to find eggs across the game (even if they're far)
function findEggs()
    local foundEggs = {}
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") then
            for _, eggName in ipairs(target_eggs) do
                if string.find(obj.Name, eggName) then
                    local eggPosition = obj:FindFirstChild("Main") and obj.Main.CFrame.Position or obj.CFrame.Position
                    local playerPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    if playerPosition then
                        local distance = (eggPosition - playerPosition.Position).Magnitude
                        if distance <= max_distance then
                            table.insert(foundEggs, obj)
                        end
                    end
                end
            end
        end
    end
    return foundEggs
end

-- Function to teleport to the farthest egg
function teleportToEgg(egg)
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local eggPosition = egg:FindFirstChild("Main") and egg.Main.CFrame.Position or egg.CFrame.Position
        hrp.CFrame = CFrame.new(eggPosition + Vector3.new(0, 3, 0)) -- Slightly above egg to prevent colliding
        print("Teleporting to egg:", egg.Name)
    else
        print("HumanoidRootPart not found!")
    end
end

-- Function to open the egg (if open_eggs is true)
function openEgg(egg)
    print("Opening egg:", egg.Name)
    -- Replace this with actual logic to "open" the egg in Delta, e.g., triggering the "E" key or Delta's method to open
end

-- Egg Hunt (search for the eggs in the entire game)
function startEggHunt()
    eggHunt = true
    while eggHunt do
        -- Search for eggs across the entire game world
        local foundEggs = findEggs()
        
        if #foundEggs == 0 then
            print("No eggs found.")
        else
            -- Prioritize the first egg in the target_eggs list
            local eggToTeleport = foundEggs[1] -- Default to the first egg found
            teleportToEgg(eggToTeleport) -- Teleport to the egg
            openEgg(eggToTeleport)  -- Open the egg if open_eggs is true
        end
        
        -- Delay before checking again
        wait(5)
    end
end

-- GUI Creation
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer.PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BackgroundTransparency = 0.5
frame.Parent = screenGui

local startEggHuntButton = Instance.new("TextButton")
startEggHuntButton.Size = UDim2.new(0, 180, 0, 50)
startEggHuntButton.Position = UDim2.new(0, 10, 0, 10)
startEggHuntButton.Text = "Start Egg Hunt"
startEggHuntButton.Parent = frame

-- Button click event to start the egg hunt
startEggHuntButton.MouseButton1Click:Connect(function()
    print("Starting Egg Hunt...")
    startEggHunt() -- Start the egg hunt when the button is clicked
end)

local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(0, 180, 0, 50)
stopButton.Position = UDim2.new(0, 10, 0, 70)
stopButton.Text = "Stop Egg Hunt"
stopButton.Parent = frame

-- Button click event to stop the egg hunt
stopButton.MouseButton1Click:Connect(function()
    print("Stopping Egg Hunt...")
    eggHunt = false  -- Set eggHunt to false to stop the hunt
end)
